════════════════════════════════════════════════════════════════
🚀 COMANDOS PARA ATUALIZAR O VPS RAPIDAMENTE
════════════════════════════════════════════════════════════════

📋 OPÇÃO 1: ATUALIZAÇÃO AUTOMÁTICA (RECOMENDADO)
────────────────────────────────────────────────────────────────

Execute este comando único no VPS:

curl -sSL https://raw.githubusercontent.com/Paulolinks/video-automation-n8n/master/files/UPDATE_VPS_QUICK.sh | sudo bash


✅ O que este comando faz automaticamente:
  1. Para o serviço
  2. Faz backup dos arquivos antigos
  3. Baixa create_video.py, create_audio.py e server.py do GitHub
  4. Ajusta permissões
  5. Reinicia o serviço
  6. Mostra o status


════════════════════════════════════════════════════════════════
📋 OPÇÃO 2: ATUALIZAÇÃO MANUAL (Passo a Passo)
════════════════════════════════════════════════════════════════

1️⃣ PARAR O SERVIÇO:
sudo systemctl stop video-automation


2️⃣ BAIXAR ARQUIVOS ATUALIZADOS:
cd /home/n8n/files

sudo -u n8n curl -o create_video.py https://raw.githubusercontent.com/Paulolinks/video-automation-n8n/master/files/create_video.py

sudo -u n8n curl -o create_audio.py https://raw.githubusercontent.com/Paulolinks/video-automation-n8n/master/files/create_audio.py

sudo -u n8n curl -o server.py https://raw.githubusercontent.com/Paulolinks/video-automation-n8n/master/files/server.py


3️⃣ AJUSTAR PERMISSÕES:
chmod +x /home/n8n/files/*.py
chown -R n8n:n8n /home/n8n/files/


4️⃣ REINICIAR O SERVIÇO:
sudo systemctl restart video-automation


5️⃣ VERIFICAR STATUS:
sudo systemctl status video-automation


6️⃣ TESTAR:
curl http://localhost:5005/health


════════════════════════════════════════════════════════════════
📋 OPÇÃO 3: ATUALIZAR APENAS create_video.py
════════════════════════════════════════════════════════════────

Se você só quer atualizar o create_video.py:

sudo systemctl stop video-automation
cd /home/n8n/files
sudo -u n8n curl -o create_video.py https://raw.githubusercontent.com/Paulolinks/video-automation-n8n/master/files/create_video.py
chmod +x create_video.py
sudo systemctl start video-automation
sudo journalctl -u video-automation -f


════════════════════════════════════════════════════════════════
🧪 TESTAR APÓS ATUALIZAÇÃO
════════════════════════════════════════════════════════════════

1️⃣ CRIAR ÁUDIO:
curl -X POST http://31.97.142.45:5005/create-audio \
  -H "Content-Type: application/json" \
  -d '{"id": "teste_update", "text": "Teste após atualização do código com set_fps."}'


2️⃣ AGUARDAR 60 SEGUNDOS


3️⃣ CRIAR VÍDEO:
curl -X POST http://31.97.142.45:5005/create-video \
  -H "Content-Type: application/json" \
  -d '{"id": "teste_update"}'


4️⃣ VER LOGS EM TEMPO REAL:
sudo journalctl -u video-automation -f


5️⃣ VERIFICAR STATUS:
curl http://31.97.142.45:5005/status/teste_update


6️⃣ BAIXAR VÍDEO:
curl -O http://31.97.142.45:5005/download/videos/video_teste_update.mp4


════════════════════════════════════════════════════════════════
🔍 COMANDOS DE DEBUG
════════════════════════════════════════════════════════════════

Ver logs completos:
sudo journalctl -u video-automation -n 100 --no-pager

Ver processos Python rodando:
ps aux | grep python

Ver portas em uso:
sudo netstat -tlnp | grep 5005

Ver arquivos criados:
ls -lh /home/n8n/files/audios/
ls -lh /home/n8n/files/videos/

Parar e iniciar:
sudo systemctl stop video-automation
sudo systemctl start video-automation
sudo systemctl status video-automation


════════════════════════════════════════════════════════════════
🎯 RESUMO DAS MUDANÇAS NESTA ATUALIZAÇÃO
════════════════════════════════════════════════════════════════

✅ create_video.py SIMPLIFICADO:
   - Removeu todo o código do Whisper (legendas desabilitadas)
   - Removeu imports desnecessários
   - Usa .set_fps() em vez de .fps =
   - Código 3x menor e mais limpo
   - Foco apenas em vídeo com imagens + áudio

✅ Correções:
   - Corrige erro "must be real number, not NoneType"
   - FPS definido corretamente em todos os clips
   - Método de render mais estável

════════════════════════════════════════════════════════════════
